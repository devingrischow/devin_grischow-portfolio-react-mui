
import { DetailsComponentTypes } from '../details_pages/components/component-types'




//** EasyEats Page Images */


//What is EE Carousel Images
import iOSMain from '../images/easyeats_details_page_images/what_is_easyeats/showcase_images_carousel/EE-Top-Start-iOS.png';
import AndroidMain from '../images/easyeats_details_page_images/what_is_easyeats/showcase_images_carousel/EE-Center-ANDROID.png';
import iOSVideoPlayer from '../images/easyeats_details_page_images/what_is_easyeats/showcase_images_carousel/EE-iOS-VideoPlayer.png';
import AndroidEatingFoodLandscape from '../images/easyeats_details_page_images/what_is_easyeats/showcase_images_carousel/EE-Eating-Sideways-Android.png';
import AndroidScrollingPastAD from '../images/easyeats_details_page_images/what_is_easyeats/showcase_images_carousel/EE-Scrolling-Past-GPT-Ad-Android.png';



//What does it do section
import iOSEatingFood from '../images/easyeats_details_page_images/what_does_it_do_woven/EE-Eating-iOS.png';
import GroceryListCheckingAndrioid from '../images/easyeats_details_page_images/what_does_it_do_woven/EE-GroceryList-Check-Android.png';
import FoodJournaliOSChecking from '../images/easyeats_details_page_images/what_does_it_do_woven/EE-Food-Journal-Check-iOS.png';




//How does it Do it dash player Woven
import iOSMacroDashboard from '../images/easyeats_details_page_images/how_does_it_do_it_woven/dashboard_player_woven/EE-iOS-MacroDashboard.png';
import HorizontalVideoPlayer from '../images/easyeats_details_page_images/how_does_it_do_it_woven/dashboard_player_woven/EE-Android-Horizontal-Player.png';



//How does it Do it Curate showoff Big Img
import EEiOSCurationCodeWhileLoop from '../images/easyeats_details_page_images/how_does_it_do_it_woven/curate_code_big_img/EE-iOS-While-Looo-Curate-Code.png';


//How does it Do it Woven of Admin Panel & Software woven
import EEAdminPanelPic from '../images/easyeats_details_page_images/how_does_it_do_it_woven/admin-software-woven/Admin Panel for Adding food.png';
import EECustomEditingSoftwarePic from '../images/easyeats_details_page_images/how_does_it_do_it_woven/admin-software-woven/Batch Editor Software Start Screen.png';


//** Figma Page Images */


//Woven Showcases
import FigmaFocusGardenPrototype from '../images/figma-details-images/woven-prototypes/Figma-FocusGarden-Prototyping.png';
import FigmaEEGeneralShowcase from '../images/figma-details-images/woven-prototypes/FIGMA-ee-showcase.png';
import FigmaEEWebsitePrototyping from '../images/figma-details-images/woven-prototypes/Figma-ee-webpage-showcase.png';


//Slideshow of images
import FigmaReUseComponents from '../images/figma-details-images/slideshow-various-pictures/Figma-ee-Re-usable and testable components.png';
import FigmaEEMaterialThemeComponents from '../images/figma-details-images/slideshow-various-pictures/figma-ee-material-color-theme.png';
import FigmaEEEarlyPrototype from '../images/figma-details-images/slideshow-various-pictures/Figma-ee-prototype-showcase.png';
import FigmaEEAppIconShowcase from '../images/figma-details-images/slideshow-various-pictures/Figma-EE-App-Icon-Showcase.png';
import FigmaEEAppstoreShowcase from '../images/figma-details-images/slideshow-various-pictures/Figma-ee-appstore-showcases.png';



//Slideshow of Portfolio Prototypes
import FigmaPortfolioSiteComponents from '../images/figma-details-images/slideshow-portfolio-pictures/Figma-Portfolio-Components.png';
import FigmaPortfolioSitePrototype from '../images/figma-details-images/slideshow-portfolio-pictures/Figa-Site-Med-High Fidelity Prototype.png';



//** Cloud Data Images */


//Slideshow of images
import CDFoodDocumentObjectStructure from '../images/cloud-database-images/CloudData-Foods-Firestore.png';
import CDGitHubImplementations from '../images/cloud-database-images/CD-Firebase-Integration-Demos.png';
import CDIntegrationsWithASingleProject from '../images/cloud-database-images/Cloud-Involved-Showcase.png';
import CDVideoFolderPaths from '../images/cloud-database-images/CloudData-Recipe-Videos-Showcase.png';
import CDSecureUserAutoGeneratedIDsFromTestDB from '../images/cloud-database-images/CD-Showcase-secure-user-id-from-testing-database.png';
import CDAnalyticsFromCloudDatabase from '../images/cloud-database-images/CloudData-Analytics.png';


//** Trello Images */


//Slideshow of Nominal Usages
import TrelloFoodsProgressCards from '../images/trello-images/slideshow-trello-usage/Trello-EE-Foods-Progress-Showcase.png';
import TrelloFoodsProgressCardsMOBILE from '../images/trello-images/slideshow-trello-usage/Trello-EE-Foods-Progress-Showcase-MOBILE.png';

import TrelloCurationCards from '../images/trello-images/slideshow-trello-usage/Trello-ee-Curate-progress.png';

import TrelloVersionGoalsCards from '../images/trello-images/slideshow-trello-usage/Trello-EE-Version-Goals.png';
import TrelloVersionGoalsCardsMOBILE from '../images/trello-images/slideshow-trello-usage/Trello-EE-Version-Goals-MOBILE.png';

import TrelloProjectsAidedWith from '../images/trello-images/slideshow-trello-usage/Trello-View-of-projects-aided-with.png';



//** Problem Solving Images */


//Software Carousel 
import PSUsingNamesInWorkBooks from '../images/problem-solving-images/slideshow-features-from-vba/ps-excel-using-company-names.png';
import PSPartNumbersDropDown from '../images/problem-solving-images/slideshow-features-from-vba/ps-excel-using-part-number-dropdown.png';
import PSWorkBookControlls from '../images/problem-solving-images/slideshow-features-from-vba/ps-excel-workbook-controlls.png';

//Woven of framework limitations
import PSFourDimensionArrayModel from '../images/problem-solving-images/woven-framework-limitations/ps-4-array-showcase.png';
import PSSimplifiedPositionCalculation from '../images/problem-solving-images/woven-framework-limitations/ps-simplified-position-rotation-calc.png';









export const DetailsPageData = {
    
    EasyEats: {
        
        pageId:'EasyEats',
        
        pageTitle:"Devin G | EasyEats",
        
        menuLabel:"EasyEats",
        
        
        
        detailsBody:[
            //Header on top
            {
                type:DetailsComponentTypes.Header,
                text:"EasyEats: Eating Made Easy"
            }, 
            
            
            {
                type:DetailsComponentTypes.BodyTitle,
                text:'What is EasyEats?'
            },
            
            
            {
                type:DetailsComponentTypes.BodyText,
                text:"EasyEats is a multi-platform recipe dieting app I created and published on iOS and Android that I started back in college when learning to code in Swift. Starting from a final project consisting of some classes and function calls, to quickly outgrowing the curriculum of the second class, to now fully modern composition-based apps on both platforms."
            }, 


            {
                type:DetailsComponentTypes.CarouselImagesDisplay,
                carouselID:"EasyEats_Showcase_General",
                imagesList:[
                    {
                        image:iOSMain,
                        caption:"Top of EasyEats on iOs"
                    },
                    {
                        image:AndroidMain,
                        caption:"Viewing a Food on Android"
                    },
                    {
                        image:iOSVideoPlayer,
                        caption:"Watching a Recipe Step video on iOS"
                    },

                    {
                        image:AndroidEatingFoodLandscape,
                        caption:"Preparing to eat a Food in landscape mode on Android"
                    },


                    {
                        image:AndroidScrollingPastAD,
                        caption:"Swiping between an AD card and a Food on Android"
                    },
                ]
            },
            
            
            {
                type:DetailsComponentTypes.BodyText,
                text:'It takes tons of elements all involved in managing and creating the app, including NoSQL cloud databases, custom-created software & admin panels, project management & protocols, and much more. All this while being free on the app stores and monetized with Google ads.'
            },
            
            
            {
                type:DetailsComponentTypes.BodyTitle,
                text:'What does it do?'
            },
            
            
            {
                type:DetailsComponentTypes.BodyText,
                text:'It takes on the modern challenge of dieting, by leveraging technologies creatively and intelligently to tackle all sides of a person’s eating diet. Users are able to swipe through curated foods based on the data from their macro profile, view recipe info and modify serving sizes, and even watch videos on every step for every meal. After that, they can view their macros and make new shopping lists automatically and adjust them to their needs. If they’re done with all that, they can even work on building their own food journals.'
            },

            {
                type:DetailsComponentTypes.WovenImagesDispaly,
                modMaxWidth:'40%',

                imagesList:[
                    {
                        image:iOSEatingFood,
                        caption:"Eating a Food On iOS"
                    },


                    {
                        image:FoodJournaliOSChecking,
                        caption:"Looking at the Food Journal on iOS"
                    },
                    

                    {
                        image:GroceryListCheckingAndrioid,
                        caption:"Checking the Grocery List on Android"
                    },





                   


                    
                ]

            },
            
            
            
            {
                type:DetailsComponentTypes.BodyTitle,
                text:'How does it do it?'
            },
            
            {
                type:DetailsComponentTypes.BodyText,
                text:'EasyEats is built using both iOS and Android’s native compositional libraries, SwiftUI and Compose. Both platforms use libraries to help do various tasks like asynchronous image loading with KingFisher and Coil, Animation files with Lottie, and Cloud Database Storage & Authentication plus more using Firebase and Google Cloud. To try and provide users with the most accurate information about themselves, their macros are calculated using equations and data from scientifically accurate and trustworthy sources like the National Institutes of Health (NIH), Harvard Health, and even the CDC.'
            },


            {
                type:DetailsComponentTypes.WovenImagesDispaly,

                displayMobileAs:'column',


                imagesList:[
                    {
                        image:iOSMacroDashboard,
                        caption:"Looking at Macro Dashboard on iOS"
                    },


                    {
                        image:HorizontalVideoPlayer,
                        caption:"Watching a horizontal video on Android"
                    },
                    
                ]

            },

            {
                type:DetailsComponentTypes.BodyText,
                text:"Meals are presented to the user in a card-swiping format. A common design adapted for a traditionally difficult-to-decide-on task: what to eat. With each swipe, meal recommendations adapt to what time it is, what foods the user likes to eat, and their past eating trends. Using a tags and values cache-based map system, with data fed into a custom meal curation AI, recommendations are more varied but still personalized to the users. Providing them with tailored and more normal, reasonable recommendations."
            },

            {//Woven of EE Curation Code
                type:DetailsComponentTypes.BigImage,
                image:EEiOSCurationCodeWhileLoop

            },


            {
                type:DetailsComponentTypes.BodyText,
                text:"Powering all of the Cloud features is Firebase, Firestore, and Media Storage. Firebase has been essential in allowing EasyEats to be possible, thanks to its easy integration into iOS and Android, and extensive array of testing tools and documentation. Making everything was simple, fast, but incredibly customizable and in-depth for all the projects’ needs. However, because of how in-depth some items were getting, I wanted to reduce the chances of human error and increase efficiency. So I made several tools to help, like an admin panel for adding items to Firebase, and an editing tool with Python to further reduce the file sizes of videos for step videos."
            }, 



            {//Woven of admin panel and custom software
                type:DetailsComponentTypes.WovenImagesDispaly,

                modMaxWidth:'80%',

                displayMobileAs:'column',


                imagesList:[
                    {
                        image:EEAdminPanelPic,
                        caption:"Part of the Admin Panel for adding new Foods"
                    },


                    {
                        image:EECustomEditingSoftwarePic,
                        caption:"Starting Screen for Batch Video Editing Software"
                    },
                    
                ]

            },


            //Link to EasyEats Github Code Snippets
            {
                type:DetailsComponentTypes.BodyTitle,
                text:'GitHub Links'
            },


            //Link to Editing project 
            {
                type:DetailsComponentTypes.GitHubLink,
                repoTitle:"EasyEatsBatchEditor",
                repoUser:"devingrischow",
                repoLink:"https://github.com/devingrischow/EasyEatsBatchEditor"
            },




            //Link to EasyEats Repo
            {
                type:DetailsComponentTypes.GitHubLink,
                repoTitle:"EasyEats-Code-Snippets",
                repoUser:"devingrischow",
                repoLink:"https://github.com/devingrischow/EasyEats-Code-Snippets"
            },


            


            
            
        ]
        
        
    },
    
    
    
    
    
    
    FigmaDesign: {
        pageId:'FigmaDesign',
        
        pageTitle:"Devin G | Figma",
        
        menuLabel:"Figma Design",
        
        detailsBody:[
            {
                type:DetailsComponentTypes.Header,
                text:"Figma Design & Prototyping"
            }, 
            
            {
                type:DetailsComponentTypes.BodyText,
                text:"I first started using Figma and learning professional design practices in college when taking a UI/UX class. It’s not my biggest or most often used skill, but prototyping and planning still play a big role in the entire process of app development."
            }, 


            {//Woven of Prototypes
                type:DetailsComponentTypes.WovenImagesDispaly,

                modMaxWidth:'70%',

                imagesList:[
                    {
                        image:FigmaFocusGardenPrototype,
                        caption:"Prototype designs for an iOS app about the Pomodoro Technique"
                    },


                    {
                        image:FigmaEEGeneralShowcase,
                        caption:"In Figma App showcase for EasyEats"
                    },

                    {
                        image:FigmaEEWebsitePrototyping,
                        caption:"Prototype of a website for a mobile app"
                    },
                    
                ]

            },



            {
                type:DetailsComponentTypes.BodyText,
                text:"I’ve designed a few softwares, and almost anytime they get big, Figma starts to get involved for prototyping and designing a quality UI. Whether for prototyping features or designing entire ideas out, it’s super important to have a knowledge of the process. Then there’s the important part, being able to transfer details from the designs to an app. I find the more you understand about how to design, the more you can transfer down to the software. Most designers design within a pattern or style most likely to be the most popular for apps at the time."
            }, 


            {//Carousel of various figma screenshots amd esogms 
                type:DetailsComponentTypes.CarouselImagesDisplay,
                carouselID:"figma_prototyping_showcases",

                imagesList:[
                    {
                        image:FigmaReUseComponents,
                        caption:"Reusable Progress Bar, Grocery List, and Other Components"
                    },
                    {
                        image:FigmaEEMaterialThemeComponents,
                        caption:"A Color Pallete following Material Design made with Figma Tools"
                    },
                    {
                        image:FigmaEEEarlyPrototype,
                        caption:"Part of a low fidelity prototype that was designed for my app, EasyEats"
                    },

                    {
                        image:FigmaEEAppIconShowcase,
                        caption:"Prototypes for App Icons in various stages of prototyping, tweaking, and finalization"
                    },


                    {
                        image:FigmaEEAppstoreShowcase,
                        caption:"Various sizes and styles for Preview Images on the App Store and Play Store"
                    },
                ]
            },


            {
                type:DetailsComponentTypes.BodyText,
                text:"I found it’s easier to build the software when you understand how the UI/UX is designed; usually, the same design principles can be applied in code. For example, Android and Apple UI have similar design requirements for bottom tab bars. Being able to understand what designers are designing for allows you to potentially see if anyone has built kits or has standardized uses already made, like Material Design or other plugins."
            }, 



            {//Woven of This pages Prototypes
                type:DetailsComponentTypes.CarouselImagesDisplay,
                carouselID:"figma_portfolio_pictures",

                imagesList:[
                    {
                        image:FigmaPortfolioSiteComponents,
                        caption:"Components that make up this sites prototypes"
                    },


                    {
                        image:FigmaPortfolioSitePrototype,
                        caption:"Prototype that makes up this site"
                    },
                    
                ]

            },


            {
                type:DetailsComponentTypes.BodyText,
                text:"Prototyping and designing play such a big role in the workflow that even this site is designed in Figma! Details and designs are important not only for the look but also for designing how the features should work. "
            }, 



        ]
    },
    
    
    
    
    
    
    CloudDatabases:{
        
        pageId:'CloudDatabases',
        
        pageTitle:"Devin G | Cloud DataBases",
        
        menuLabel:"Cloud Databases",
        
        
        
        detailsBody:[
            //Header on top
            {
                type:DetailsComponentTypes.Header,
                text:"Cloud Databases"
            }, 
            
        
            
            {
                type:DetailsComponentTypes.BodyText,
                text:"Cloud databases and services are versatile and often vital in modern-day software. I picked up learning Google Cloud Firebase before my classes required it because the app I was building required a way to store lots of data, be updated, and show information to users around the world. I couldn’t do it by bundling the data into the app, so I looked up what I’d need and started from there."
            }, 
            {
                type:DetailsComponentTypes.BodyText,
                text:"Fast forward, and I quickly found myself teaching and tutoring how to use cloud databases effectively and what the best practices are, how to use them and find documentation, and how to best use every part of a suite effectively."
            }, 

            {//Carousel of various firebase images to showcase
                type:DetailsComponentTypes.CarouselImagesDisplay,
                carouselID:"Cloud",

                imagesList:[
                    {
                        image:CDFoodDocumentObjectStructure,
                        caption:"Section from a Document structure for a `Food` object"
                    },
                    {
                        image:CDGitHubImplementations,
                        caption:"Various Firebase implementations I’ve created for testing or demonstrations"
                    },
                    {
                        image:CDIntegrationsWithASingleProject,
                        caption:"App implementations used in one database"
                    },

                    {
                        image:CDVideoFolderPaths,
                        caption:"Cloud media folder orginization"
                    },


                    {
                        image:CDSecureUserAutoGeneratedIDsFromTestDB,
                        caption:"User entries using secure auto generated Ids from a testing database"
                    },

                    {
                        image:CDAnalyticsFromCloudDatabase,
                        caption:"Analytic events from multiple apps being measured"
                    },
                ]
            },


            {
                type:DetailsComponentTypes.BodyTitle,
                text:"Services & Usage"
            }, 

            {
                type:DetailsComponentTypes.BodyText,
                text:"Firebase is where I started, but the principles I learned and taught can be applied to every and any cloud service. I’ve even compared and investigated a few other services like AWS and MongoDB for uses in other projects and services. One of the most important things I learned and made sure everyone understood about every cloud service was the importance of bandwidth and reducing the amount you call to the server."
            }, 
            {
                type:DetailsComponentTypes.BodyText,
                text:"It’s really easy to make and overuse functions that call to the server, so understanding how to make and use effective calls is vital. Not just for making effective software but also for making sure the bandwidth cost and database are stable at any scale."
            }, 
            
            
            
            
        ]
        
        
    },
    
    
    
    
    
    
    Trello:{
        pageId:'Trello',
        
        pageTitle:"Devin G | Trello",
        
        menuLabel:"Trello & Agile",
        
        detailsBody:[
            //Header on top
            {
                type:DetailsComponentTypes.Header,
                text:"Trello & Agile"
            }, 
            
            
            {
                type:DetailsComponentTypes.BodyText,
                text:"Concepts I was introduced to early on in my coding classes. However, once I started my iOS classes, we had to publish a full app. That’s when we really started to dive deep with Trello, Sprints, and every part of the workflow. After publishing 2 apps, I’ve had a lot of experience working with Trello & Agile. Along with learning and tutoring it in college, I also tutored it in some outside programs I did with Chicago where other students learned how to make apps and software as well. One of the big things I taught students was how to use Agile workflow and how to manage their time and tasks appropriately."
            }, 


            //Slideshow of Trello Pictures
            {
                type:DetailsComponentTypes.CarouselImagesDisplay,
                carouselID:"Trello_showcases",
                imagesList:[
                    {
                        image:TrelloFoodsProgressCards,
                        mobileImage:TrelloFoodsProgressCardsMOBILE,
                        caption:"Tracked Progress of Foods being made, recorded, and added"
                    },
                    {
                        image:TrelloCurationCards,
                        caption:"Progress on screen features for an app using trello tags to seperate platform progress"
                    },
                    {
                        image:TrelloVersionGoalsCards,
                        mobileImage:TrelloVersionGoalsCardsMOBILE,
                        caption:"Update points and features recorded"
                    },

                    {
                        image:TrelloProjectsAidedWith,
                        caption:"Small showcase of some Trellos I’ve worked with other students on"
                    },
                ]
            },

            {
                type:DetailsComponentTypes.BodyText,
                text:"In classes when we were working on our apps, we would routinely have sprints to discuss our current progress, issues, how we planned to solve them, and what our strategy was moving forward to the next sprint. I’ve done sprints in classes and overseen them in other programs, and the point of doing them so often is to get constant feedback on the project and make sure everyone is on the same page about the project. Learning this early on in coding has made my workflow for myself and the clients much faster than it would have normally been."
            }, 
            
            
            
            
        ]
        
    },
    
    
    
    
    
    
    
    ProblemSolving:{
        
        pageId:'ProblemSolving',
        
        pageTitle:"Devin G | Problem Solving",
        
        menuLabel:"Problem Solving",
        
        
        detailsBody:[
            //Header on top
            {
                type:DetailsComponentTypes.Header,
                text:"Problem Solving & Solutions"
            }, 
            
            
            // {
            //     type:DetailsComponentTypes.BigImage,
            //     image:CloudDataShowcase
            // },
            
            
            {
                type:DetailsComponentTypes.BodyText,
                text:"Playing such a huge role in programming, I’ve already had to solve a lot of problems, but even with that, it’s something that still plays a big part in my skillset and that I’m very good at using and applying. There have been countless times I’ve had to fix issues in other software, working in frameworks, and even debugging mine and others git and GitHub."
            }, 


            {
                type:DetailsComponentTypes.BodyTitle,
                text:"Working with software limitations"
            },


            {
                type:DetailsComponentTypes.BodyText,
                text:"Recently, I was asked if I could help improve an Excel workflow for an accounting workbook and creating invoices.  For about a month, I worked in Excel and VBA, making features that would help accelerate their workbook productivity. Every so often, I would meet with him and tell him about the progress and ask him for more ideas on improving the workflow. He would tell me issues or ideas he had, and I would write them down and then later begin to integrate or change them. It went back and forth only a few times before we landed on the perfect design and workflow."
            },

            //SLIDESHOW OF FEATURES
            //Slideshow of Trello Pictures
            {
                type:DetailsComponentTypes.CarouselImagesDisplay,
                carouselID:"ps-showcase",
                imagesList:[
                    {
                        image:PSUsingNamesInWorkBooks,
                        caption:"Editing a sample workbook entry with a dropdown of all company names worked with"
                    },
                    {
                        image:PSPartNumbersDropDown,
                        caption:"Editing a sample pricing chart entry showing a dropdown of all possible part numbers worked with before"
                    },
                    {
                        image:PSWorkBookControlls,
                        caption:"Controls I created for essential actions to be preformed easier and not risk accidentally breaking pointers"
                    },

                ]
            },



            {
                type:DetailsComponentTypes.BodyText,
                text:"He gave me some ideas for features he wanted, and I came up with solutions for implementing them. After meeting, I would look into researching solutions for trying to solve his specific needs efficiently. I used Excel in the past, so I knew going in what he was asking for could be done even if I hadn’t seen what he specifically wanted. Some features he needed were to be able to clear up the workbook and also be able to send copies for tax reasons. Unfortunately, Excel has no quick log feature. But it had everything I needed to create a suite of workbook tools for automating that need and more. I created a page for him to manage every part of the workbook. He could save PDF copies of the sheet, clear the book, or perform both at once with a multi-action. He could even change the date of the file through an input entry if needed, but it also automatically re calculated dates when nothing is given. With every feature following similar principles like this, his workbook was fully feature-filled in no time. He has been using it for a while and has saved so many hours in his workflow now."
            },






            {
                type:DetailsComponentTypes.BodyTitle,
                text:"Working within framework limitations"
            },


            {
                type:DetailsComponentTypes.BodyText,
                text:"I’ve built lots of low and high-level systems, and I’ve used quite a few frameworks, and I’ve learned and taught the importance of DRY(Don’t Repeat Yourself) in programming, and how important it is to not repeat yourself. Following that principle, it’s important to know when to and not to use frameworks and libraries, and how important it is to understand the limitations as well. Repeating code can often lead to lots of slowdowns and unnecessary overhead. One big issue I had once occurred in SwiftUI. I needed to make an infinitely scrolling carousel that had swiping actions and could add new items to it, while being seamless. I found some examples and integrated them but always kept having issues. What I ended up doing was modifying a common carousel and giving it multiple arrays to use for seemingly infinite scrollability."
            },


            {//Woven of admin panel and custom software
                type:DetailsComponentTypes.WovenImagesDispaly,
                
                modMaxWidth:'70%',

                displayMobileAs:'column',

                imagesList:[
                    {
                        image:PSFourDimensionArrayModel,
                        caption:"Showcase of the four dimensional arrays inside their model"
                    },


                    {
                        image:PSSimplifiedPositionCalculation,
                        caption:"Simplified position calculation for swiping behaviors"
                    },
                    
                ]

            },


            {
                type:DetailsComponentTypes.BodyText,
                text:"Every swipe to a new direction, the array would determine: What’s in the active array, what’s in the de-activated array, what’s in the to-be-re-activated array, and what in the cache might fit in with these. Swiping forward puts data into de-activated, and swiping backward puts data into to-be-re-activated. Sounds like a lot to check, and for a while it was. But by shrinking the max size of the arrays to 4, each operation became much faster. With that many swipe states, I was even able to introduce tracking values so I could control every part of the carousel. Using the foods cache, multiple array storages, swaps, and shifts, performance was noticeably stable for all deployments, and even had simpler code by the end."
            },
            

            
            
            
        ]
        
    },
    
    
    
    
    
    
    
    
    
    AI:{
        
        pageId:'AI',
        
        pageTitle:"Devin G | AI - Use & Grasp",
        
        menuLabel:"AI - Use & Grasp",
        
        
        
        detailsBody:[
            //Header on top
            {
                type:DetailsComponentTypes.Header,
                text:"AI - Usage & Grasp"
            },
            
            
            {
                type:DetailsComponentTypes.BodyText,
                text:"AI is a huge and booming part of the coding industry. Not only is it changing the way we code, it’s changing the way we make ideas and think about implementing them. What once was a simple chat box on websites can now be a full customer service agent that can even help users shop for exactly what they’re looking for, at the same time factoring in your inventory and what’s popular. Currently, the sky is the limit for ideas."
            },


            {
                type:DetailsComponentTypes.BodyText,
                text:"That’s why it’s so important for the average developer to be in the know with AI, at least some aspect of it. I’ve been following AI development years before ChatGPT became mainstream in 2022. Neural networks, models, data organization, visualization, all and every part of it has been a small passion of mine for a long time."
            },


            {
                type:DetailsComponentTypes.BodyText,
                text:"For one of my college summers, I was able to tutor over an AI learning program. We taught students the fundamentals of AI and to understand the differences and use cases of various AI models. We also taught them how to code better with AI and how to understand and code with it more effectively, while also stating the importance of code base safety. We also taught them how to visualize algorithms and data with Orange, and how to effectively organize data. With that knowledge, they were told to make some iOS apps about solving problems they were passionate about. They made tons of great ideas, some apps even went onto being published to the App Store in other programs."
            },


            {
                type:DetailsComponentTypes.BodyText,
                text:"What I discovered as a TA is that it’s easy to ask ChatGPT or any AI coding IDE to make every part of an app for you, but sometimes it will make bugs, or you will inevitably encounter an issue of some kind. That’s why it’s important for a coder to not only understand how to make effective prompts but to also understand the problems they’re trying to solve. You need to understand the fundamentals of coding and the environment you’re in order to be able to properly fix and make effective solutions."
            },
            
            
            
            
        ]
        
    }
    
    
    
    
    
    
    
    
    
};






